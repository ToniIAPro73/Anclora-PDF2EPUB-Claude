modules = ["nodejs-20", "python-3.11"]
[agent]
expertMode = true

[nix]
channel = "stable-25_05"
packages = ["redis"]

[workflows]
runButton = "Project"

[[workflows.workflow]]
name = "Project"
mode = "parallel"
author = "agent"

[[workflows.workflow.tasks]]
task = "workflow.run"
args = "Backend"

[[workflows.workflow.tasks]]
task = "workflow.run"
args = "Frontend"

[[workflows.workflow.tasks]]
task = "workflow.run"
args = "Redis"

[[workflows.workflow.tasks]]
task = "workflow.run"
args = "Celery Worker"

[[workflows.workflow]]
name = "Backend"
author = "agent"

[workflows.workflow.metadata]
outputType = "console"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "cd backend && python main.py"
waitForPort = 3002

[[workflows.workflow]]
name = "Frontend"
author = "agent"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "cd frontend && npm run start"
waitForPort = 5000

[workflows.workflow.metadata]
outputType = "webview"

[[workflows.workflow]]
name = "Redis"
author = "agent"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "redis-server --bind 127.0.0.1 --port 6379"

[workflows.workflow.metadata]
outputType = "console"

[[workflows.workflow]]
name = "Celery Worker"
author = "agent"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "cd backend && unset REDIS_PASSWORD && export CELERY_BROKER_URL=\"redis://localhost:6379/0\" && export CELERY_RESULT_BACKEND=\"redis://localhost:6379/0\" && celery -A app.tasks worker --loglevel=info --concurrency=2"

[workflows.workflow.metadata]
outputType = "console"

[[ports]]
localPort = 3002
externalPort = 3002

[[ports]]
localPort = 5000
externalPort = 80

[[ports]]
localPort = 8001
externalPort = 3000

[[ports]]
localPort = 33819
externalPort = 4200

[[ports]]
localPort = 35373
externalPort = 3001

[[ports]]
localPort = 46291
externalPort = 3003

[deployment]
deploymentTarget = "vm"
run = ["bash", "-c", "cd backend && python -m waitress --host=0.0.0.0 --port=3002 wsgi:app & cd .. && NODE_ENV=production node proxy-server.js"]
build = ["bash", "-c", "python -m pip install -r backend/requirements.txt && npm ci --omit=dev && cd frontend && npm ci && npm run build"]
