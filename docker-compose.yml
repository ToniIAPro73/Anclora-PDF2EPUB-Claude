services:
  nginx:
    image: nginx:alpine
    ports:
      - "${NGINX_PORT}:80"
    volumes:
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - frontend
      - backend
    networks:
      - anclora-network

  frontend:
    build:
      context: ./frontend
      dockerfile: ../docker/Dockerfile.frontend
    ports:
      - "${FRONTEND_PORT}:${FRONTEND_PORT}"
    environment:
      - PORT=${FRONTEND_PORT}
      - REACT_APP_API_URL=http://localhost:${NGINX_PORT}/api
    volumes:
      - ./frontend:/app
      - /app/node_modules
    depends_on:
      - backend
    networks:
      - anclora-network

  backend:
    build:
      context: ./backend
      dockerfile: ../docker/Dockerfile.backend
    ports:
      - "${BACKEND_PORT}:${BACKEND_PORT}"
    environment:
      - FLASK_APP=${FLASK_APP}
      - FLASK_ENV=${FLASK_ENV}
      - FLASK_RUN_PORT=${BACKEND_PORT}
      - SECRET_KEY=${SECRET_KEY}
      - CELERY_BROKER_URL=redis://:${REDIS_PASSWORD}@redis:${REDIS_PORT}/0
      - CELERY_RESULT_BACKEND=redis://:${REDIS_PASSWORD}@redis:${REDIS_PORT}/0
      - UPLOAD_FOLDER=${UPLOAD_FOLDER}
      - RESULTS_FOLDER=${RESULTS_FOLDER}
      - CONVERSION_TIMEOUT=${CONVERSION_TIMEOUT}
      - DATABASE_URL=${DATABASE_URL}
    volumes:
      - ./backend:/app
      - uploads:/${UPLOAD_FOLDER}
      - results:/${RESULTS_FOLDER}
    depends_on:
      - redis
      - db
    networks:
      - anclora-network

  worker:
    build:
      context: ./backend
      dockerfile: ../docker/Dockerfile.backend
    command: celery -A app.tasks.celery_app worker --loglevel=info
    environment:
      - CELERY_BROKER_URL=redis://:${REDIS_PASSWORD}@redis:${REDIS_PORT}/0
      - CELERY_RESULT_BACKEND=redis://:${REDIS_PASSWORD}@redis:${REDIS_PORT}/0
      - UPLOAD_FOLDER=${UPLOAD_FOLDER}
      - RESULTS_FOLDER=${RESULTS_FOLDER}
      - CONVERSION_TIMEOUT=${CONVERSION_TIMEOUT}
      - DATABASE_URL=${DATABASE_URL}
    volumes:
      - ./backend:/app
      - uploads:/${UPLOAD_FOLDER}
      - results:/${RESULTS_FOLDER}
    depends_on:
      - redis
      - db
    networks:
      - anclora-network

  redis:
    image: redis:7-alpine
    command: redis-server --requirepass ${REDIS_PASSWORD} --appendonly yes
    ports:
      - "${REDIS_PORT}:6379"
    volumes:
      - redis_data:/data
    networks:
      - anclora-network

  db:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    ports:
      - "${POSTGRES_PORT}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - anclora-network

volumes:
  uploads:
  results:
  redis_data:
  postgres_data:

networks:
  anclora-network: