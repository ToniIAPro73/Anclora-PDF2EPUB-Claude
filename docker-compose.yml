services:
  nginx:
    image: nginx:alpine
    ports:
      - "${NGINX_PORT}:80"
    volumes:
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf
      - /dev/null:/etc/nginx/conf.d/default.conf
    depends_on:
      - frontend
      - backend
    networks:
      - anclora-network

      env_file:
      - ./frontend/.env
      - PORT=${FRONTEND_PORT}
      - VITE_API_URL=http://localhost:${NGINX_PORT}/api
    volumes:
      - ./    env_file:
      - ./frontend/.env
      - FLASK_APP=${FLASK_APP}
      - FLASK_ENV=${FLASK_ENV}
      - FLASK_RUN_PORT=${BACKEND_PORT}
      - SECRET_KEY=${SECRET_KEY}
      - CELERY_BROKER_URL=redis://:${REDIS_PASSWORD}@redis:${REDIS_PORT}/0
      - CELERY_RESULT_BACKEND=redis://:${REDIS_PASSWORD}@redis:${REDIS_PORT}/0
      - UPLOAD_FOLDER=${UPLOAD_FOLDER}
      - RESULTS_FOLDER=${RESULTS_FOLDER}
      - CONVERSION_TIMEOUT=${CONVERSION_TIMEOUT}
    volumes:
      - ./    env_file:
      - ./backend/.env
      - CELERY_BROKER_URL=redis://:${REDIS_PASSWORD}@redis:${REDIS_PORT}/0
      - CELERY_RESULT_BACKEND=redis://:${REDIS_PASSWORD}@redis:${REDIS_PORT}/0
      - UPLOAD_FOLDER=${UPLOAD_FOLDER}
      - RESULTS_FOLDER=${RESULTS_FOLDER}
      - CONVERSION_TIMEOUT=${CONVERSION_TIMEOUT}
      - WORKER_METRICS_PORT=${WORKER_METRICS_PORT}
    volumes:
      - ./backend:/app
      - uploads:/app/${UPLOAD_FOLDER}
      - results:/app/${RESULTS_FOLDER}
    depends_on:
      redis:
        condition: service_started
    networks:
      - anclora-network
    ports:
      - "${WORKER_METRICS_PORT}:${WORKER_METRICS_PORT}"

  redis:
    image: redis:7-alpine
    command: redis-server --requirepass ${REDIS_PASSWORD} --appendonly yes
    ports:
      - "${REDIS_PORT}:6379"
    volumes:
      - redis_data:/data
    networks:
      - anclora-network

# PostgreSQL removed - now using Supabase

  prometheus:
    image: prom/prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./docker/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    depends_on:
      - backend
      - worker
    networks:
      - anclora-network

  grafana:
    image: grafana/grafana
    ports:
      - "3004:3000"
    volumes:
      - grafana_data:/var/lib/grafana
    depends_on:
      - prometheus
    networks:
      - anclora-network

volumes:
  uploads:
  results:
  redis_data:
  grafana_data:

networks:
  anclora-network: